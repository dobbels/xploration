// file: XplorationOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package org.xploration.ontology;

import jade.content.onto.*;
import jade.content.schema.*;
import jade.util.leap.HashMap;
import jade.content.lang.Codec;
import jade.core.CaseInsensitiveString;

/** file: XplorationOntology.java
 * @author ontology bean generator
 * @version 2017/04/10, 10:36:04
 */
public class XplorationOntology extends jade.content.onto.Ontology  {
  //NAME
  public static final String ONTOLOGY_NAME = "Xploration";
  // The singleton instance of this ontology
  private static ReflectiveIntrospector introspect = new ReflectiveIntrospector();
  private static Ontology theInstance = new XplorationOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String REGISTRATIONREQUEST_TEAM="team";
    public static final String REGISTRATIONREQUEST="RegistrationRequest";
    public static final String TEAM_TEAMID="teamId";
    public static final String TEAM="Team";

  /**
   * Constructor
  */
  private XplorationOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema teamSchema = new ConceptSchema(TEAM);
    add(teamSchema, org.xploration.ontology.Team.class);

    // adding AgentAction(s)
    AgentActionSchema registrationRequestSchema = new AgentActionSchema(REGISTRATIONREQUEST);
    add(registrationRequestSchema, org.xploration.ontology.RegistrationRequest.class);

    // adding AID(s)

    // adding Predicate(s)


    // adding fields
    teamSchema.add(TEAM_TEAMID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    registrationRequestSchema.add(REGISTRATIONREQUEST_TEAM, teamSchema, ObjectSchema.OPTIONAL);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
  }
